/** 
 * This file is autogenerated by goadmin.py
 *
 * This file gives you an example skeleton layout to start from. Use the existing
 * community module if you need something to hack from. I personally use the
 * notes module as it is easier to understand than some of the others.
 */

 
GO.{{name}}.MainPanel = function(config) {

	config = config || {};

	// add panels/dialogs/etc to "this" here
	
	// add event listeners here e.g. this.panel.on("click ...);

	
	// example toolbar (doesn't do anything)
	config.tbar=new Ext.Toolbar({
		cls:'go-head-tb',
		items: [{
			xtype:'addbutton',
			handler: function(b){

			},
			scope: this
		},{
			xtype:'deletebutton',
			handler: function(){

			},
			scope: this
		}]
	});

	config.items=[
        // list the panels you created here to arrange them in the MainPanel
	];	
	
	config.layout='border';
	GO.{{name}}.MainPanel.superclass.constructor.call(this, config);	
};


Ext.extend(GO.{{name}}.MainPanel, Ext.Panel, {
    // There are functions you can override here, e.g.
	afterRender : function()
	{
		GO.{{name}}.MainPanel.superclass.afterRender.call(this);
	}
});


/*
 * This will add the module to the main tabpanel filled with all the modules
 */
 
GO.moduleManager.addModule('{{name}}', GO.{{name}}.MainPanel, {
	title : GO.{{name}}.lang.{{name}},
	iconCls : 'go-tab-icon-{{name}}'
});
/*
 * If your module has a linkable item, you should add a link handler like this. 
 * The index (no. 1 in this case) should be a unique identifier of your item.
 * See classes/base/links.class.inc for an overview.
 * 
 * Basically this function opens a project window when a user clicks on it from a 
 * panel with links.
 *
 * e.g. GO.linkHandlers["GO_Module_Model_ModelName"] = function(id) {}
 *      GO.linkPreviewPanels["GO_Module_Model_ModelName"]=function(config){
 *          config = config || {};
 *          return new GO.model.Panel(config);
 *      }
 */



/* {LINKHANDLERS} */

/* {NEWMENUITEMS} */


